param CD1 = 4.71;
param CD2 = 6.71;
param CD3 = 6.25;
param CD4 = 8.1;
param CD5 = 7.15;
param CD6 = 5.55;
param CD7 = 9.32;
param CD8 = 8.27;
var G1 >= 0; 
var G2 >= 0; 
var G3 >= 0; 
var G4 >= 0; 
var G5 >= 0; 
var G6 >= 0;
var G7 >= 0;
var G8 >= 0;
param DLhrs_1 = 1414.875;
param DLhrs_2 = 1297.696735;
param DLhrs_3 = 1229.694444;
param DLhrs_4 = 1454.280714;
param DLhrs_5 = 1265.668333;
param DLhrs_6 = 1303.82375;
param DLhrs_7 = 1433.835;
param DLhrs_8 = 1453.959;
var C1 = CD1 * G1;
var C2 = CD2 * G2;
var C3 = CD3 * G3;
var C4 = CD4 * G4;
var C5 = CD5 * G5;
var C6 = CD6 * G6;
var C7 = CD7 * G7;
var C8 = CD8 * G8;
param D_1 = 265031;
param D_2 = 846227;
param D_3 = 438018;
param D_4 = 202840;
param D_5 = 147260;
param D_6 = 3916296;
param D_7 = 121822;
param D_8 = 274802;
param tr_cost = 3;
var T1_2 >= 0;
var T1_4 >= 0;
var T1_5 >= 0;
var T2_1 >= 0;
var T2_3 >= 0;
var T2_5 >= 0;
var T2_6 >= 0;
var T3_2 >= 0;
var T3_6 >= 0;
var T3_8 >= 0;
var T4_1 >= 0;
var T4_5 >= 0;
var T4_7 >= 0;
var T5_1 >= 0;
var T5_2 >= 0;
var T5_4 >= 0;
var T5_6 >= 0;
var T5_7 >= 0;
var T6_2 >= 0;
var T6_3 >= 0;
var T6_5 >= 0;
var T6_7 >= 0;
var T6_8 >= 0;
var T7_4 >= 0;
var T7_5 >= 0;
var T7_6 >= 0;
var T7_8 >= 0;
var T8_3 >= 0;
var T8_6 >= 0;
var T8_7 >= 0;
param D1_2 = 16;
param D1_4 = 110;
param D1_5 = 88;
param D2_1 = 131;
param D2_3 = 4;
param D2_5 = 78;
param D2_6 = 59;
param D3_2 = 14;
param D3_6 = 3;
param D3_8 = 138;
param D4_1 = 69;
param D4_5 = 15;
param D4_7 = 82;
param D5_1 = 100;
param D5_2 = 55;
param D5_4 = 92;
param D5_6 = 45;
param D5_7 = 48;
param D6_2 = 78;
param D6_3 = 33;
param D6_5 = 75;
param D6_7 = 45;
param D6_8 = 44;
param D7_4 = 78;
param D7_5 = 54;
param D7_6 = 88;
param D7_8 = 71;
param D8_3 = 63;
param D8_6 = 25;
param D8_7 = 30;
param PL1_2 = 1 + (D1_2 * 0.0001) + 0.07;
param PL1_4 = 1 + (D1_4 * 0.0001) + 0.07;
param PL1_5 = 1 + (D1_5 * 0.0001) + 0.07;
param PL2_1 = 1 + (D2_1 * 0.0001) + 0.07;
param PL2_3 = 1 + (D2_3 * 0.0001) + 0.07;
param PL2_5 = 1 + (D2_5 * 0.0001) + 0.07;
param PL2_6 = 1 + (D2_6 * 0.0001) + 0.07;
param PL3_2 = 1 + (D3_2 * 0.0001) + 0.07;
param PL3_6 = 1 + (D3_6 * 0.0001) + 0.07;
param PL3_8 = 1 + (D3_8 * 0.0001) + 0.07;
param PL4_1 = 1 + (D4_1 * 0.0001) + 0.07;
param PL4_5 = 1 + (D4_5 * 0.0001) + 0.07;
param PL4_7 = 1 + (D4_7 * 0.0001) + 0.07;
param PL5_1 = 1 + (D5_1 * 0.0001) + 0.07;
param PL5_2 = 1 + (D5_2 * 0.0001) + 0.07;
param PL5_4 = 1 + (D5_4 * 0.0001) + 0.07;
param PL5_6 = 1 + (D5_6 * 0.0001) + 0.07;
param PL5_7 = 1 + (D5_7 * 0.0001) + 0.07;
param PL6_2 = 1 + (D6_2 * 0.0001) + 0.07;
param PL6_3 = 1 + (D6_3 * 0.0001) + 0.07;
param PL6_5 = 1 + (D6_5 * 0.0001) + 0.07;
param PL6_7 = 1 + (D6_7 * 0.0001) + 0.07;
param PL6_8 = 1 + (D6_8 * 0.0001) + 0.07;
param PL7_4 = 1 + (D7_4 * 0.0001) + 0.07;
param PL7_5 = 1 + (D7_5 * 0.0001) + 0.07;
param PL7_6 = 1 + (D7_6 * 0.0001) + 0.07;
param PL7_8 = 1 + (D7_8 * 0.0001) + 0.07;
param PL8_3 = 1 + (D8_3 * 0.0001) + 0.07;
param PL8_6 = 1 + (D8_6 * 0.0001) + 0.07;
param PL8_7 = 1 + (D8_7 * 0.0001) + 0.07;
var Trans_sum = T1_2 + T1_4 + T1_5 + T2_1 + T2_3 + T2_5 + T2_6 + T3_2 + T3_6 + T3_8 + T4_1 + T4_5 + T4_7 + T5_1 + T5_2 + T5_4 + T5_6 + T5_7 + T6_2 + T6_3 + T6_5 + T6_7 + T6_8 + T7_4 + T7_5 +T7_6 + T7_8 + T8_3 + T8_6 + T8_7;
var Trans_cost = tr_cost * Trans_sum;
Minimize cost:
C1 + C2 + C3 + C4 + C5 + C6 + C7 + C8 + Trans_cost;
subject to ct1: ((G1 * 4380) / DLhrs_1 ) + T1_2 + T1_4 + T1_5 - (T2_1 * PL2_1) - (T4_1 * PL4_1) - (T5_1 * PL5_1) = D_1;
subject to ct2: ((G2 * 4380) / DLhrs_2 ) + T2_1 + T2_3 + T2_5 + T2_6 - (T1_2 * PL1_2) - (T3_2 * PL3_2) - (T5_2 * PL5_2) - (T6_2 * PL6_2) = D_2;
subject to ct3: ((G3 * 4380) / DLhrs_3 )  + T3_2 + T3_6 + T3_8 - (T2_3 * PL2_3) - (T6_3 * PL6_3) - (T8_3 * PL8_3) = D_3; 
subject to ct4: ((G4 * 4380) / DLhrs_4 )  + T4_1 + T4_5 + T4_7 - (T1_4 * PL1_4) - (T5_4 * PL5_4) - (T7_4 * PL7_4) = D_4;
subject to ct5: ((G5 * 4380) / DLhrs_5 )  + T5_1 + T5_2 + T5_4 + T5_6 + T5_7 - (T1_5 * PL1_5) - (T2_5 * PL2_5) - (T4_5 * PL4_5) - (T6_5 * PL6_5) - (T7_5 * PL7_5) = D_5;
subject to ct6: ((G6 * 4380) / DLhrs_6 )  + T6_2 + T6_3 + T6_5 + T6_7 + T6_8 - (T2_6 * PL2_6) - (T3_6 * PL3_6) - (T5_6 * PL5_6) - (T7_6 * PL7_6) - (T8_6 * PL8_6) = D_6; 
subject to ct7: ((G7 * 4380) / DLhrs_7 )  + T7_4 + T7_5 + T7_6 + T7_8 - (T4_7 * PL4_7) - (T5_7 * PL5_7) - (T6_7 * PL6_7) - (T8_7 * PL8_7) = D_7;
subject to ct8: ((G8 * 4380) / DLhrs_8 )  + T8_3 + T8_6 + T8_7 - (T3_8 * PL3_8) - (T6_8 * PL6_8) - (T7_8 * PL7_8) = D_8; 
